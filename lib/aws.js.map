{"version":3,"sources":["../src/aws.js"],"names":["getS3Instance","serverless","region","provider","getProvider","service","name","sdk","S3","apiVersion","emptyS3Directory","s3","bucket","dir","listParams","Bucket","Prefix","listObjectsV2","promise","listedObjects","Contents","length","deleteParams","Delete","Objects","forEach","Key","push","deleteObjects","IsTruncated","getElasticBeanstalkInstance","ElasticBeanstalk"],"mappings":";;;;;;;;;;;;;AAAA;AACO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAaC,MAAb,EAAwB;AACnD,MAAMC,QAAQ,GAAGF,UAAU,CAACG,WAAX,CAAuBH,UAAU,CAACI,OAAX,CAAmBF,QAAnB,CAA4BG,IAAnD,CAAjB;AAEA,SAAO,IAAIH,QAAQ,CAACI,GAAT,CAAaC,EAAjB,CAAoB;AAAEN,IAAAA,MAAM,EAANA,MAAF;AAAUO,IAAAA,UAAU,EAAE;AAAtB,GAApB,CAAP;AACD,CAJM;;;;AAMA,IAAMC,gBAAgB;AAAA,2FAAG,iBAAOC,EAAP,EAAWC,MAAX,EAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,UADwB,GACX;AACjBC,cAAAA,MAAM,EAAEH,MADS;AAEjBI,cAAAA,MAAM,EAAEH;AAFS,aADW;AAAA;AAAA,mBAMFF,EAAE,CAACM,aAAH,CAAiBH,UAAjB,EAA6BI,OAA7B,EANE;;AAAA;AAMxBC,YAAAA,aANwB;;AAAA,kBAQ1BA,aAAa,CAACC,QAAd,CAAuBC,MAAvB,KAAkC,CARR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAUxBC,YAAAA,YAVwB,GAUT;AACnBP,cAAAA,MAAM,EAAEH,MADW;AAEnBW,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,OAAO,EAAE;AAAX;AAFW,aAVS;AAe9BL,YAAAA,aAAa,CAACC,QAAd,CAAuBK,OAAvB,CAA+B,iBAAa;AAAA,kBAAVC,GAAU,SAAVA,GAAU;AAC1CJ,cAAAA,YAAY,CAACC,MAAb,CAAoBC,OAApB,CAA4BG,IAA5B,CAAiC;AAAED,gBAAAA,GAAG,EAAHA;AAAF,eAAjC;AACD,aAFD;AAf8B;AAAA,mBAmBxBf,EAAE,CAACiB,aAAH,CAAiBN,YAAjB,EAA+BJ,OAA/B,EAnBwB;;AAAA;AAAA,iBAqB1BC,aAAa,CAACU,WArBY;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAqBOnB,gBAAgB,CAACE,MAAD,EAASC,GAAT,CArBvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBH,gBAAgB;AAAA;AAAA;AAAA,GAAtB,C,CAwBP;;;;;AACO,IAAMoB,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAC7B,UAAD,EAAaC,MAAb,EAAwB;AACjE,MAAMC,QAAQ,GAAGF,UAAU,CAACG,WAAX,CAAuBH,UAAU,CAACI,OAAX,CAAmBF,QAAnB,CAA4BG,IAAnD,CAAjB;AAEA,SAAO,IAAIH,QAAQ,CAACI,GAAT,CAAawB,gBAAjB,CAAkC;AACvC7B,IAAAA,MAAM,EAANA,MADuC;AAEvCO,IAAAA,UAAU,EAAE;AAF2B,GAAlC,CAAP;AAID,CAPM","sourcesContent":["// S3 Utils\nexport const getS3Instance = (serverless, region) => {\n  const provider = serverless.getProvider(serverless.service.provider.name);\n\n  return new provider.sdk.S3({ region, apiVersion: \"2006-03-01\" });\n};\n\nexport const emptyS3Directory = async (s3, bucket, dir) => {\n  const listParams = {\n    Bucket: bucket,\n    Prefix: dir,\n  };\n\n  const listedObjects = await s3.listObjectsV2(listParams).promise();\n\n  if (listedObjects.Contents.length === 0) return;\n\n  const deleteParams = {\n    Bucket: bucket,\n    Delete: { Objects: [] },\n  };\n\n  listedObjects.Contents.forEach(({ Key }) => {\n    deleteParams.Delete.Objects.push({ Key });\n  });\n\n  await s3.deleteObjects(deleteParams).promise();\n\n  if (listedObjects.IsTruncated) await emptyS3Directory(bucket, dir);\n};\n\n// EB Utils\nexport const getElasticBeanstalkInstance = (serverless, region) => {\n  const provider = serverless.getProvider(serverless.service.provider.name);\n\n  return new provider.sdk.ElasticBeanstalk({\n    region,\n    apiVersion: \"2010-12-01\",\n  });\n};\n"],"file":"aws.js"}